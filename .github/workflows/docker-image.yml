name: Build/Push Image

on:
  push:
  # pull_request:
    branches:
      - "main"
      - testenv

env:
  REPOSITORY: react_web
  permissions: write-all
  # STAGE: $(if [ $GITHUB_BASE_REF == 'testenv'  ]; then echo "testenv"; elif [ $GITHUB_BASE_REF == 'main' ]; then echo "main"; else echo "Undefined"; fi;)
   STAGE: ${{ github.ref }}
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    # outputs:
      # environment: ${{ env.STAGE }}
    # environment: testenv
    # if: contains(github.ref,'testenv')
    environment: $STAGE

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
          echo ${{ secrets.TEST }}
      # - name: Install dependenciess
      #   run: yarn
      # - name: Test and coverage
      #   run: yarn test
      # - name: SonarQube Scan
      #   uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      # - name: Analyze with SonarCloud
      #   uses: sonarsource/sonarcloud-github-action@v1.3
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Login to Docker Hub
        id: docker-login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Setup Git Config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      # - name: Build and 
      #   if: contains(github.ref,'main')
      #   id: build-image
      #   run: |
      #     docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/$REPOSITORY:dev .
      #     docker push ${{ secrets.DOCKER_HUB_USERNAME }}/$REPOSITORY:dev
      #     echo "::set-output name=image::${{ secrets.DOCKER_HUB_USERNAME }}/$REPOSITORY:dev"
       # uses: docker/build-push-action@v2
      #  with:
      #    context: .
      #    file: ./Dockerfile
      #    push: true
      #    tags: ${{ secrets.DOCKER_HUB_USERNAME }}/react_web:latest

      - name: Build and 
        id: build-image
        env: 
         IMAGE_TAG: fe-${{ github.sha }}
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/$REPOSITORY:$IMAGE_TAG .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/$REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::${{ secrets.DOCKER_HUB_USERNAME }}/$REPOSITORY:$IMAGE_TAG"
          
      - name: Setup Kustomize
        id: setup-kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Push Changes to Github
        id: push-changes
        env:
          IMAGE_NAME: ${{ steps.build-image.outputs.image }}
        run: |
          git fetch
          git checkout cicd
          cd k8s/overlays/dev && kustomize edit set image demo-app=${IMAGE_NAME} && cd -
          git add k8s/overlays/dev/kustomization.yaml
          git commit -m "[ci/cd] change image name."
          git push origin cicd
